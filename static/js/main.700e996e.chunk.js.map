{"version":3,"sources":["store/contactsReducer.js","components/tools/index.js","components/Contacts/index.js","components/Contacts/Container.js","components/Contacts/Header.js","components/Contacts/Body.js","components/Contacts/List.js","components/Contacts/Card.js","components/layout/Layout.js","components/AddContactModal/index.js","components/AddContactModal/Container.js","components/AddContactModal/Header.js","components/AddContactModal/Body.js","components/AddContactModal/Footer.js","components/utils/Buttons.js","services/httpClient.js","components/ContactApp.js","App.js","reportWebVitals.js","store/contactsStore.js","index.js"],"names":["contactsSlice","createSlice","name","initialState","users","newContact","role","reducers","setContacts","state","action","payload","key","value","actions","getRandomColor","seed","items","length","getRandomRole","Container","header","children","extras","className","Contacts","Body","Header","List","data","map","contact","Card","id","lastname","first_name","last_name","avatar","full_name","src","style","backgroundColor","Layout","footer","cancel","onClick","useSelector","contacts","dispatch","useDispatch","htmlFor","onChange","e","target","type","Footer","NewContactBtn","icon","Button","label","BASE_URL","ContactApp","newUser","useState","modalVisible","setModalVisible","useEffect","pageNo","Promise","resolve","reject","fetch","then","response","json","catch","console","error","userClient","faPencilAlt","prevState","method","body","res","alert","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","store","contactsStore","document","getElementById"],"mappings":"mPAEaA,EAAgBC,YAAY,CACvCC,KAAM,WACNC,aAAc,CACZC,MAAO,GACPC,WAAY,CACVH,KAAM,GACNI,KAAM,KAGVC,SAAU,CAERC,YAAa,SAACC,EAAOC,GACnBD,EAAML,MAAQM,EAAOC,SAGvBN,WAAY,SAACI,EAAOC,GAAY,IAAD,EACRA,EAAOC,QAAtBC,EADuB,EACvBA,IAAKC,EADkB,EAClBA,MACXJ,EAAMJ,WAAWO,GAAOC,M,EAMab,EAAcc,QAA1CN,E,EAAAA,YAAaH,E,EAAAA,WAEbL,IAAf,Q,OC1BA,IAKMe,EAAiB,SAACC,GACtB,IAAMC,EAAQ,CAAC,UAAW,UAAW,UAAW,WAChD,OAAOA,EAAc,GAAPD,EAAaC,EAAMC,SAI7BC,EAAgB,SAACH,GACrB,IAAMC,EAAQ,CACZ,UACA,uBACA,kBACA,qBAEF,OAAOA,EAAc,EAAPD,EAAYC,EAAMC,SCdnB,OAAEE,UCFF,YAAyD,IAAD,IAAnCC,cAAmC,MAA1B,KAA0B,EAApBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAC3D,OACE,sBAAKC,UAAU,0BAAf,UACGH,EACD,cAACI,EAASC,KAAV,UAAgBJ,IACfC,MDHqBI,OEHb,YAA+B,IAAbL,EAAY,EAAZA,SAC/B,OACE,sBAAKE,UAAU,wCAAf,cAAyDF,MFCzBI,KGHrB,YAA6B,IAAbJ,EAAY,EAAZA,SAC7B,OAAO,qBAAKE,UAAU,+BAAf,SAA+CF,KHEdM,KIF3B,YAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,qBAAKL,UAAU,gBAAf,SACGK,EAAKC,KAAI,SAACC,GAAD,OACR,cAACN,EAASO,KAAV,CAAgCH,KAAME,GAAlBA,EAAQE,UJFYD,KKFjC,YAAyB,INFXE,EMEEL,EAAQ,EAARA,KACrBM,EAAkCN,EAAlCM,WAAYC,EAAsBP,EAAtBO,UAAWC,EAAWR,EAAXQ,OACzBC,GNJqBJ,EMIYE,ENHjC,GAAN,OMG2BD,ENH3B,YAAuBD,IMIvB,OACE,sBAAKV,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,iBAAiBe,IAAKF,IACrC,qBACEG,MAAO,CAAEC,gBAAiB1B,EAAeuB,EAAUpB,SACnDM,UAAU,sBAGd,sBAAKA,UAAU,mBAAf,UACE,mBAAGA,UAAU,gBAAb,SAA8Bc,IAC9B,mBAAGd,UAAU,iBAAb,SAA+BL,EAAcmB,EAAUpB,kBCfhD,SAASwB,EAAT,GAA+B,IAAbpB,EAAY,EAAZA,SAC/B,OAAO,qBAAKE,UAAU,aAAf,SAA6BF,ICEvB,OAAEF,UCFF,YAKX,IAAD,IAJDC,cAIC,MAJQ,KAIR,MAHDsB,cAGC,MAHQ,KAGR,EAFDC,EAEC,EAFDA,OACAtB,EACC,EADDA,SAEA,OACE,mCACE,qBACEuB,QAASD,EACT1C,KAAK,YACL+B,GAAG,YACHT,UAAU,wDAJZ,SAME,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,iCAAf,UACGH,EACD,cAAC,EAAOK,KAAR,UAAcJ,IACbqB,YDhBehB,OEHb,YAA+B,IAAbL,EAAY,EAAZA,SAC/B,OAAO,qBAAKE,UAAU,8BAAf,SAA8CF,KFEnBI,KGDrB,YAA4B,EAAZJ,SAAa,IAAD,EAGrCwB,aAAY,SAACrC,GAAD,OAAWA,EAAMsC,YAD/B1C,WAAcH,EAFyB,EAEzBA,KAAMI,EAFmB,EAEnBA,KAEhB0C,EAAWC,cACjB,OACE,qBAAKzB,UAAU,iCAAf,SACE,uBAAMA,UAAU,4BAAhB,UACE,sBAAKA,UAAU,0BAAf,UACE,uBAAOA,UAAU,mBAAmB0B,QAAQ,WAA5C,uBAGA,uBAEErC,MAAOX,EACPiD,SAAU,SAACC,GAAD,OACRJ,EAAS3C,EAAW,CAAEO,IAAK,OAAQC,MAAOuC,EAAEC,OAAOxC,UAErDX,KAAK,WACLsB,UAAU,aACV8B,KAAK,QAPD,UALqC,QAe7C,sBAAK9B,UAAU,0BAAf,UACE,uBAAOA,UAAU,mBAAmB0B,QAAQ,OAA5C,kBAGA,uBACEC,SAAU,SAACC,GAAD,OACRJ,EAAS3C,EAAW,CAAEO,IAAK,OAAQC,MAAOuC,EAAEC,OAAOxC,UAErDA,MAAOP,EACPJ,KAAK,OACLsB,UAAU,aACV8B,KAAK,WAXoC,cHtBXC,OIH3B,YAA+B,IAAbjC,EAAY,EAAZA,SAC/B,OAAO,qBAAKE,UAAU,yBAAf,SAAyCF,MCC3C,SAASkC,EAAT,GAA2C,IAAlBC,EAAiB,EAAjBA,KAAMZ,EAAW,EAAXA,QACpC,OACE,qBACEA,QAASA,EACTrB,UAAU,4CAFZ,SAIGiC,IAMA,SAASC,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOd,EAAW,EAAXA,QAC9B,OACE,qBAAKrB,UAAU,aAAaqB,QAASA,EAArC,SACGc,I,oBCnBDC,EAAW,yBCcF,SAASC,IAAc,IAAD,EACRf,aAAY,SAACrC,GAAD,OAAWA,EAAMsC,YAAhD3C,EAD2B,EAC3BA,MAAO0D,EADoB,EACpBA,QACTd,EAAWC,cAFkB,EAGKc,oBAAS,GAHd,mBAG5BC,EAH4B,KAGdC,EAHc,KA+BnC,OA1BAC,qBAAU,YDjBY,SAAC,GAAoB,IAAD,IAAjBC,cAAiB,MAAR,EAAQ,EAC1C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAAV,OACjBC,MAAM,GAAD,OAAIX,EAAJ,sBAA0BO,IAC5BK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC3C,GACDA,EACFwC,EAAQxC,GACHyC,EAAO,OAEfK,OAAM,SAACvB,GAAD,OAAOwB,QAAQC,MAAMzB,MAC3BuB,OAAM,SAACvB,GAAD,OAAOwB,QAAQC,MAAMzB,UCS9B0B,CAA2B,CAAEX,OAAQ,IAAKK,MAAK,SAACpE,GAC9C4C,EAASxC,EAAYJ,EAAMyB,YAE5B,IAsBD,mCAGE,eAACa,EAAD,WAEE,cAACjB,EAASL,UAAV,CACEG,OACE,cAACiC,EAAD,CACEC,KAAM,cAAC,IAAD,CAAiBA,KAAMsB,MAC7BlC,QA7BZ,WACEoB,GAAgB,SAACe,GAAD,OAAgBA,QA+B1B3D,OAAQ,eAACI,EAASE,OAAV,+BAA4BvB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAOc,OAAnC,OAPV,SASE,cAACO,EAASG,KAAV,CAAeC,KAAMzB,MAGtB4D,GACC,cAAC,EAAY5C,UAAb,CACEwB,OAlCV,SAAsBQ,GACA,cAAhBA,EAAEC,OAAOpB,IAAoBgC,GAAgB,SAACe,GAAD,OAAgBA,MAkCzD3D,OAAQ,cAAC,EAAYM,OAAb,0BACRgB,OACE,cAAC,EAAYY,OAAb,UACE,cAACG,EAAD,CAAQb,QAlCtB,YDnBsB,WAAmB,IAAlBlC,EAAiB,uDAAP,GACjC,OAAO,IAAIyD,SAAQ,SAACC,EAASC,GAAV,OACjBC,MAAM,GAAD,OAAIX,EAAJ,SAAqB,CAAEqB,OAAQ,OAAQC,KAAMvE,IAC/C6D,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC3C,GACDA,EAAMwC,EAAQxC,GACbyC,EAAO,SAEbK,OAAM,SAACvB,GAAD,OAAOwB,QAAQC,MAAMzB,MAC3BuB,OAAM,SAACvB,GAAD,OAAOwB,QAAQC,MAAMzB,UCW9B0B,CACmBhB,GAChBU,MAAK,SAACW,GACLC,MAAM,0BAAD,OAA2BD,EAAIlD,QAErC0C,OAAM,WACLS,MAAM,6BA2BgCzB,MAAM,UADd,iB,MCtDvB0B,MARf,WACE,OACE,qBAAK7D,UAAU,MAAf,SACE,cAACqC,EAAD,OCGSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJCO,cAAe,CAC5BC,QAAS,CAAEhD,SAAUiD,KCIvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOC,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.700e996e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    users: [],\r\n    newContact: {\r\n      name: '',\r\n      role: '',\r\n    },\r\n  },\r\n  reducers: {\r\n    // Sets the users list\r\n    setContacts: (state, action) => {\r\n      state.users = action.payload;\r\n    },\r\n    // Updates the new contact details\r\n    newContact: (state, action) => {\r\n      let { key, value } = action.payload;\r\n      state.newContact[key] = value;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setContacts, newContact } = contactsSlice.actions;\r\n\r\nexport default contactsSlice.reducer;\r\n","// Funtion to return the fullname joining first name and last name\r\nconst fullName = (firstName, lastname) => {\r\n  return `${firstName} ${lastname}`;\r\n};\r\n\r\n// Funtion to get a random color based on a given seed(integer) value\r\nconst getRandomColor = (seed) => {\r\n  const items = ['#45BD27', '#EEB214', '#BC0036', '#EEB214'];\r\n  return items[(seed * 13) % items.length];\r\n};\r\n\r\n// Funtion to get a random Role based on a given seed(integer) value;\r\nconst getRandomRole = (seed) => {\r\n  const items = [\r\n    'Manager',\r\n    'Financial Controller',\r\n    'Head Of Finance',\r\n    'Division Director',\r\n  ];\r\n  return items[(seed * 3) % items.length];\r\n};\r\n\r\nexport { fullName, getRandomColor, getRandomRole };\r\n","import Container from './Container';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\nimport List from './List';\r\nimport Card from './Card';\r\nexport default { Container, Header, Body, List, Card };\r\n","import React from 'react';\r\nimport Contacts from '.';\r\n\r\nexport default function Container({ header = null, children, extras }) {\r\n  return (\r\n    <div className=\"contacts-container flex\">\r\n      {header}\r\n      <Contacts.Body>{children}</Contacts.Body>\r\n      {extras}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Header({ children }) {\r\n  return (\r\n    <div className=\"contacts-header flex flex-item-center\"> {children}</div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Body({ children }) {\r\n  return <div className=\"contacts-body flex flex-fill\">{children}</div>;\r\n}\r\n","import React from 'react';\r\nimport Contacts from '.';\r\n\r\nexport default function List({ data }) {\r\n  return (\r\n    <div className=\"contacts-list\">\r\n      {data.map((contact) => (\r\n        <Contacts.Card key={contact.id} data={contact} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { fullName, getRandomColor, getRandomRole } from '../tools';\r\n\r\nexport default function Card({ data }) {\r\n  const { first_name, last_name, avatar } = data;\r\n  const full_name = fullName(first_name, last_name);\r\n  return (\r\n    <div className=\"contacts-contact-item\">\r\n      <div className=\"contact-image-holder\">\r\n        <img className=\"contact-avatar\" src={avatar} />\r\n        <div\r\n          style={{ backgroundColor: getRandomColor(full_name.length) }}\r\n          className=\"contact-status\"\r\n        ></div>\r\n      </div>\r\n      <div className=\"contacts-details\">\r\n        <p className=\"contacts-name\">{full_name}</p>\r\n        <p className=\"contacts-title\">{getRandomRole(full_name.length)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Layout({ children }) {\r\n  return <div className=\"app-layout\">{children}</div>;\r\n}\r\n","import Header from './Header';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nimport Container from './Container';\r\n\r\nexport default { Container, Header, Body, Footer };\r\n","import React from 'react';\r\nimport AddNew from '.';\r\n\r\nexport default function AddNewModal({\r\n  header = null,\r\n  footer = null,\r\n  cancel,\r\n  children,\r\n}) {\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={cancel}\r\n        name=\"addnew-bg\"\r\n        id=\"addnew-bg\"\r\n        className=\"contacts-addnew-modal-container flex flex-item-center\"\r\n      >\r\n        <div className=\"contacts-addnew-modal\">\r\n          <div className=\"contacts-addnew-container flex\">\r\n            {header}\r\n            <AddNew.Body>{children}</AddNew.Body>\r\n            {footer}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Header({ children }) {\r\n  return <div className=\"contacts-addnew-header flex\">{children}</div>;\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newContact } from '../../store/contactsReducer';\r\n\r\nexport default function Body({ children }) {\r\n  const {\r\n    newContact: { name, role },\r\n  } = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"contacts-addnew-body flex-fill\">\r\n      <form className=\"contacts-addnew-form flex\">\r\n        <div className=\"flex form-input-wrapper\" key=\"name\">\r\n          <label className=\"form-input-label\" htmlFor=\"fullname\">\r\n            Full name\r\n          </label>\r\n          <input\r\n            key=\"name\"\r\n            value={name}\r\n            onChange={(e) =>\r\n              dispatch(newContact({ key: 'name', value: e.target.value }))\r\n            }\r\n            name=\"fullname\"\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"flex form-input-wrapper\" key=\"role\">\r\n          <label className=\"form-input-label\" htmlFor=\"role\">\r\n            Role\r\n          </label>\r\n          <input\r\n            onChange={(e) =>\r\n              dispatch(newContact({ key: 'role', value: e.target.value }))\r\n            }\r\n            value={role}\r\n            name=\"role\"\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Footer({ children }) {\r\n  return <div className=\"contacts-addnew-footer\">{children}</div>;\r\n}\r\n","//  Different VButton components used for the application\r\nimport React from 'react';\r\n\r\n//  Circle button with an icon and click functionality defined\r\nexport function NewContactBtn({ icon, onClick }) {\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className=\"contacts-addnew-btn flex flex-item-center\"\r\n    >\r\n      {icon}\r\n    </div>\r\n  );\r\n}\r\n\r\n//  Rounded button with a label and click functionality defined\r\nexport function Button({ label, onClick }) {\r\n  return (\r\n    <div className=\"app-button\" onClick={onClick}>\r\n      {label}\r\n    </div>\r\n  );\r\n}\r\n","const BASE_URL = 'https://reqres.in/api/';\r\n// Funtion to get the list of users\r\nconst getUserContacts = ({ pageNo = 1 }) => {\r\n  return new Promise((resolve, reject) =>\r\n    fetch(`${BASE_URL}users?page=${pageNo}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data) {\r\n          resolve(data);\r\n        } else reject([]);\r\n      })\r\n      .catch((e) => console.error(e))\r\n      .catch((e) => console.error(e))\r\n  );\r\n};\r\n// Funtion to add a new user\r\nconst addUserContacts = (payload = {}) => {\r\n  return new Promise((resolve, reject) =>\r\n    fetch(`${BASE_URL}users`, { method: 'POST', body: payload })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data) resolve(data);\r\n        else reject(null);\r\n      })\r\n      .catch((e) => console.error(e))\r\n      .catch((e) => console.error(e))\r\n  );\r\n};\r\n\r\nexport { getUserContacts, addUserContacts };\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setContacts } from '../store/contactsReducer';\r\n// Components\r\nimport Contacts from './Contacts/index';\r\nimport Layout from './layout/Layout';\r\nimport AddNewModal from './AddContactModal/index';\r\nimport { Button, NewContactBtn } from './utils/Buttons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n// Services\r\nimport * as userClient from '../services/httpClient';\r\n\r\nexport default function ContactApp() {\r\n  const { users, newUser } = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Function to get the user contacts- sends request to the API\r\n    userClient.getUserContacts({ pageNo: 2 }).then((users) => {\r\n      dispatch(setContacts(users.data));\r\n    });\r\n  }, []);\r\n  // Function to control the visibility of the New Contact Modal\r\n  function toggleAddNewModal() {\r\n    setModalVisible((prevState) => !prevState);\r\n  }\r\n\r\n  // Function to control the visibility of the New Contact Modal- close the modal when clicked outside the Modal\r\n  function handleCancel(e) {\r\n    if (e.target.id === 'addnew-bg') setModalVisible((prevState) => !prevState);\r\n  }\r\n  // Function to save the user contact- sends request to the API\r\n  function saveContact() {\r\n    userClient\r\n      .addUserContacts(newUser)\r\n      .then((res) => {\r\n        alert(`Added new user with id ${res.id}`);\r\n      })\r\n      .catch(() => {\r\n        alert('Failed to add contact');\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      {/* Layout defines the structure of the container that displays thr comtacts app */}\r\n\r\n      <Layout>\r\n        {/* Contacts contains all the contact components */}\r\n        <Contacts.Container\r\n          extras={\r\n            <NewContactBtn\r\n              icon={<FontAwesomeIcon icon={faPencilAlt} />}\r\n              onClick={toggleAddNewModal}\r\n            />\r\n          }\r\n          header={<Contacts.Header>Contacts ({users?.length})</Contacts.Header>}\r\n        >\r\n          <Contacts.List data={users}></Contacts.List>\r\n        </Contacts.Container>\r\n        {/* New contacts modal */}\r\n        {modalVisible && (\r\n          <AddNewModal.Container\r\n            cancel={handleCancel}\r\n            header={<AddNewModal.Header>New contact</AddNewModal.Header>}\r\n            footer={\r\n              <AddNewModal.Footer key=\"footer\">\r\n                <Button onClick={saveContact} label=\"Save\" />\r\n              </AddNewModal.Footer>\r\n            }\r\n          />\r\n        )}\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\r\nimport ContactApp from './components/ContactApp';\r\nimport './styles/Fonts.css';\r\n\r\n// Components\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ContactApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contactsReducer';\r\n\r\nexport default configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport contactsStore from './store/contactsStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={contactsStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}